import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.Socket;

public class ClientHandler implements Runnable {
    private final Socket clientSocket;

    public ClientHandler(Socket clientSocket) {
        this.clientSocket = clientSocket;
    }

    @Override
    public void run() {
        try (BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
             OutputStream out = clientSocket.getOutputStream()) {

            // Read the request line
            String requestLine = in.readLine();
            if (requestLine == null || !requestLine.startsWith("GET")) {
                sendResponse(out, 405, "Method Not Allowed");
                return;
            }

            // Parse the request URI
            String requestUri = requestLine.split(" ")[1];
            if (!requestUri.startsWith("/echo/")) {
                sendResponse(out, 404, "Not Found");
                return;
            }

            // Extract the text to echo
            String textToEcho = requestUri.substring("/echo/".length());

            // Send the response
            sendResponse(out, 200, textToEcho);
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                clientSocket.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    private void sendResponse(OutputStream out, int statusCode, String responseText) throws IOException {
        String response = "HTTP/1.1 " + statusCode + " OK\r\n" +
                          "Content-Type: text/plain\r\n" +
                          "Content-Length: " + responseText.length() + "\r\n" +
                          "\r\n" +
                          responseText;
        out.write(response.getBytes());
        out.flush();
    }
}
